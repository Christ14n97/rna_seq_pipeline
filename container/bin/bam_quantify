#!/usr/bin/env Rscript



#-#-#-#-#-#-#-#-#-#-#-#-#
# Argument parsing
#-#-#-#-#-#-#-#-#-#-#-#-#

library(optparse)
option_list <- list( 
  make_option("--gtf",help="Path to the GTF file [required]",type="character"),
  make_option("--out",help="name of the RDS file to generate [required]",type="character"),
  make_option("--strand",help="read strand to consider [both,forward,reverse]",type="character",default = "both"),
  make_option("--mode",help="mode [exon,gene,tx,all]",type="character",default = "exon")
)
opt <- parse_args(OptionParser(option_list=option_list),positional_arguments = c(1,+Inf))
opt$options$strand <- match.arg(opt$options$strand,c("both","forward","reverse"))
opt$options$mode <- match.arg(opt$options$mode,c("gene","exon","tx","all"))
if (is.null(opt$options$gtf) || is.null(opt$options$out)) stop("--gtf and --out arguments are required")
if (!file.exists(opt$options$gtf)) stop("cannot find --gtf file")





#-#-#-#-#-#-#-#-#-#-#-#-#
# Methods definitions
#-#-#-#-#-#-#-#-#-#-#-#-#
library(BiocParallel)
register(MulticoreParam(workers=8))
library(GenomicAlignments)
library(GenomicFeatures)
library(rtracklayer)

# Perform read counting on BAM generated with STAR and stranded-RNA-seq protocol 
# (conider only reads mapping on reverse strand of the gene)
summarizeOverlaps_STAR_RNAseq <- function(bam.files,gtf,strand=c("both","forward","reverse")) {
    strand <- match.arg(strand)
    switch (strand,
            "both" = {
              flag <- scanBamFlag(isUnmappedQuery=FALSE,isMinusStrand=NA)
            },
            "forward" = {
              flag <- scanBamFlag(isUnmappedQuery=FALSE,isMinusStrand=FALSE)
            },
            "reverse" = {
              flag <- scanBamFlag(isUnmappedQuery=FALSE,isMinusStrand=TRUE)
            }
    )
    q <- summarizeOverlaps(
        features = gtf,
        reads = bam.files,
        mode = Union,
        inter.feature = FALSE,
        ignore.strand = TRUE,
        # preprocess.reads = function(x) {
        #   x <- x[values(x)$mapq>=255] # Julien: In STAR, the mapping quality is 255 for uniquely mapping reads
        # },
        param = ScanBamParam(what="mapq",flag=flag)
    )
    q
}




#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Main
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
bam.files <- BamFileList(opt$args,yieldSize=5000000)
names(bam.files) <- path(bam.files)

switch (opt$options$mode,
  "gene" = {
      gtf <- import(opt$options$gtf,"gtf",feature.type="gene")
  },
  "exon" = {
      gtf <- import(opt$options$gtf,"gtf",feature.type="exon")
      gtf <- split(gtf,gtf$gene_id)
  },
  "tx" = {
      gtf <- import(opt$options$gtf,"gtf",feature.type="exon")
      gtf <- split(gtf,gtf$transcript_id)
  },
  "all" = {
    gtf <- import(opt$options$gtf)
  }
)
e <- summarizeOverlaps_STAR_RNAseq(bam.files,gtf,strand=opt$option$strand)
saveRDS(e,file=opt$options$out)


